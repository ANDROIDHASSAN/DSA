ðŸŒŸ Day 28/101: DSA Challenge ðŸŒŸ

Today, I solved the Move Zeros problem on LeetCode! ðŸ”„
Using a simple loop and swap technique to move zeros to the end was a great exercise in array manipulation! ðŸ’ª

#101DaysOfDSA #MoveZeros #LeetCode #ProblemSolving #CodingJourney #Day28 #DSAChallenge #KeepLearning

question :-
283. Move Zeroes
Solved
Easy
Topics
Companies
Hint
Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

 

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
Example 2:

Input: nums = [0]
Output: [0]
 

Constraints:

1 <= nums.length <= 104
-231 <= nums[i] <= 231 - 1
 

Follow up: Could you minimize the total number of operations done?
Seen this question in a real interview before?
1/5
Yes
No
Accepted
3.4M
Submissions
5.5M
Acceptance Rate
62.2%
Topics
Companies
Hint 1
Hint 2
Similar Questions
Discussion (204)

answer :- 
class Solution {
public:
    void moveZeroes(vector<int>& nums) {
    int i = 0;
    for(int j=0;j<nums.size();j++)
    {
    if(nums[j]!=0)  
    {
    swap(nums[j],nums[i]);
    i++;
    }
    }
}
};
Logic :- 
Bhai, suno! moveZeroes function ka kaam hai ki wo nums array ke elements ko aise set kare ki sab zero end mein chale jayein, aur jo bhi non-zero elements hain, unka order bilkul same rahe.

Logic aisa hai:

Do Pointer: Yahan pe do pointers hain, i aur j:

i track karta hai kahan next non-zero element dalna hai.
j array ke har element ko check karta hai.
Array Mein Ghoomna: Loop chalta hai aur j har element ko check karta hai.

Non-Zero Check: Har element pe, agar wo zero nahi hai:

Toh nums[j] ko nums[i] ke sath swap kar do.
Phir i ko aage badha do.
Final Result: Jab loop khatam hoga, toh sab non-zero elements array ke shuruat mein honge aur zeros end mein ho jayenge.

Yeh sab kuch O(n) time complexity mein hota hai aur space complexity O(1) hai, kyunki yeh original array ko hi modify karta hai, extra space nahi leta. Samjhe? Simple hai na! ðŸ˜„
